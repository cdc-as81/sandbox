name: Push to Production

on:
  workflow_dispatch:
  pull_request_review:
    branches:
      - main
    types: [submitted]

jobs:
  push-to-production:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: "main"
        fetch-depth: 0
    - name: Ensure PR was approved by Code Owner
      id: check_approval
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          const { data: reviews } = await github.rest.pulls.listReviews({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber
          });
          //const codeOwners = ['cdc-as81', 'gilsharon321']; // Replace with actual code owners
          const fs = require('fs');
          const path = require('path');
          //const codeownersPath = path.join(process.env.GITHUB_WORKSPACE, '.github', 'CODEOWNERS');
          const codeownersPath = path.join('.github', 'CODEOWNERS');
          let codeOwners = [];
          try {
            const codeownersContent = fs.readFileSync(codeownersPath, 'utf8');
            codeOwners = codeownersContent
              .split('\n')
              .map(line => line.trim())
              .filter(line => line && !line.startsWith('#'))
              .flatMap(line => line.split(/\s+/).slice(1)) // skip the pattern, get owners
              .map(owner => owner.startsWith('@') ? owner.slice(1) : owner)
              .filter((owner, idx, arr) => arr.indexOf(owner) === idx); // unique
          } catch (err) {
            core.setFailed(`Failed to read CODEOWNERS: ${err.message}`);
          }
          const reviewsFromCodeOwners = reviews.filter(r =>
            r.state === 'APPROVED' && codeOwners.includes(r.user.login));

          if (reviewsFromCodeOwners.length === 0) {
            core.setFailed('No approvals from code owners.');
          } else {
            console.log(`Found ${reviewsFromCodeOwners.length} approvals from code owners`);
          }
    - name: Pull from main and push to production
      if: success()
      run: |
        echo "Pulling from main branch and pushing to production"

